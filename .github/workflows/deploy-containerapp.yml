name: Build & Deploy Container App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write    # for Azure OIDC
  contents: read

env:
  RESOURCE_GROUP: BEAM-N8N
  CONTAINER_APP_NAME: ingest-api
  ACR_NAME: beamn8nacr
  ACR_LOGIN_SERVER: beamn8nacr.azurecr.io
  IMAGE_TAG: ${{ github.sha }}
  IMAGE_NAME: ingest-api
  FULL_IMAGE: "beamn8nacr.azurecr.io/ingest-api:${{ github.sha }}"
  TARGET_PORT: "8000"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure CLI - Log in to ACR for Docker
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push image to ACR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.FULL_IMAGE }}

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v2
        with:
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          imageToDeploy: ${{ env.FULL_IMAGE }}
          targetPort: ${{ env.TARGET_PORT }}
          
          environmentVariables: |
            AZ_STORAGE_ACCOUNT=ingestbeam
            AZ_CONTAINER=ingest
            N8N_WEBHOOK_URL=${{ secrets.INGESTION_SITE_URL_PROD }}
            WEBHOOK_SECRET=secretref:n8n-webhook-secret
            AZ_STORAGE_KEY=secretref:az-storage-key


      - name: Route 100% traffic to latest revision
        uses: azure/cli@v2
        with:
          inlineScript: |
            RG="${{ env.RESOURCE_GROUP }}"
            APP="${{ env.CONTAINER_APP_NAME }}"

            # Grab newest revision by creation time
            LATEST=$(az containerapp revision list -g $RG -n $APP \
              --query "sort_by([].{name:name,created:properties.createdTime}, &created)[-1].name" -o tsv)

            echo "Routing all traffic to $LATEST ..."
            az containerapp ingress traffic set -g $RG -n $APP --revision-weight $LATEST=100

            echo "Current revision traffic split:"
            az containerapp ingress traffic show -g $RG -n $APP -o table
